# add tab completion for sgcheck


# constants:
args=(config in out rm list)
copyopts=("--simulate" "--destructive" "--printcmd" "--checksum" "--list" "--verbose" "--max-depth")



function _argsWithOr ()
{
	for i in ${!args[*]}; do
		#echo $i
		if [ $i = 0 ]; then
			echo "${args[i]}"
		else
			echo " || "
			echo "${args[i]}"
		fi
	done
}

function _isValidCmd ()
{

	arrayWithout=("${args[@]/$1/}")
	if [ ! "${arrayWithout[*]}" = "${args[*]}" ]; then
		__result="yes"
	else
		__result="no"
	fi
	return 0
	#arrayWithoutPrev=("${args[@]/$prev/}")
	# only go on if prev is a valid command:
	#if [ ! "${arrayWithoutPrev[*]}" = "${args[*]}" ]; then
		# add options for every subscript:
		#COMPREPLY=( $(compgen -W "--settings" -- $cur ) ) 
	#fi
}

function _compFunc ()
{
	local cur prev
	COMPREPLY=()

	cur=${COMP_WORDS[COMP_CWORD]}
	prev=${COMP_WORDS[COMP_CWORD-1]}

	case "$prev" in
		sgcheck) COMPREPLY=( $(compgen -W "${args[*]}" -- $cur ) );;
		*)
			if [ $COMP_CWORD -ge 2 ]; then
				command=${COMP_WORDS[1]}
				_isValidCmd $command 
				if [ $__result = "yes" ]; then
					COMPREPLY=( $(compgen -W "--help" -- $cur ) )
					case "${COMP_WORDS[1]}" in
						config) 
							COMPREPLY=( ${COMPREPLY[*]} $(compgen -W "--settings" -- $cur ) ) ;;
						in)
							COMPREPLY=( ${COMPREPLY[*]} $(compgen -W "--settings ${copyopts[*]}" -- $cur ) ) ;;
						out) 
							COMPREPLY=( ${COMPREPLY[*]} $(compgen -W "--settings ${copyopts[*]}" -- $cur ) ) ;;
						rm) 
							COMPREPLY=( ${COMPREPLY[*]} $(compgen -W "--settings --file --list" -- $cur ) ) ;;
						list)
							COMPREPLY=( ${COMPREPLY[*]} $(compgen -W "--settings --details" -- $cur ) ) ;;
					esac
				fi
			fi
		;;
	esac

}

complete -F _compFunc sgcheck
