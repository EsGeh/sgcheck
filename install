#!/bin/bash


#use 'source sgcheck.init' to set enable autocompletion

# variables:
#SETTINGS_FOLDER
#SETTINGS_FILE
#SERVER
#THIS
#SERVER_BASE
#THIS_BASE


CMD_EXIT="exit"

BASHRC=$HOME/.bashrc
BASHEXTS=$HOME/.sgcheck_bashexts

# before the program has been installed, the subscripts are in the current directory:
SG_SCRIPT_PATH=.


# include global functions
. $SG_SCRIPT_PATH/sgcheck-bin/util/global
. $SG_SCRIPT_PATH/sgcheck-bin/util/settingsUtil

> "$errLog"


# 1. copy to a specific location:
echo -n "specify location where to install sgcheck? "
read dest
# expand '~', variables, ...:
eval "dest=$(echo $dest)" # <- this might be quiet unsafe !!
echo "$dest"
if [ ! -e "$dest" ]; then
	echo -n "dest doesn't exist. create (y/n)? "
	read input
	if [ "$input" = "y" ]; then
		execSafe "mkdir \"$dest\""
	else if [ "$input" = "n" ]; then
		echo "installation aborted"
		exit 1
	else
		echo "invalid input. installation aborted"
		exit 1
	fi
	fi
else
	if [ ! -d "$dest" ]; then
		echo "error: not a directory!"
		exit 1
	fi
fi
echo "copying files..."
cp ./sgcheck "$dest"
cp -r ./sgcheck-bin "$dest"
cp ./.sgcheck_bashexts "$HOME"
## 2. add the wd-file:
#echo "WORKING_DIR=\"$dest\"" > $dest/workingdir
# 2. create settings file:
# cd "$dest"
if [ ! -e "$SETTINGS_FOLDER" ] || [ ! -d "$SETTINGS_FOLDER" ]; then
	echo "creating a folder to store settings at '$SETTINGS_FOLDER'..."
	mkdir "$SETTINGS_FOLDER"
	echo "calling 'sgcheck config'..."
	eval ./bin/config
fi


yesNoI "is sgcheck allowed to add commands to the $BASHRC file? (registers this program to be executed via console, also adds tab completion) (recommended)"
if [ "$__result" = "yes" ]; then
# 3. add commands:
	echo "SG_SCRIPT_PATH=\"$dest\"" >> $BASHRC
	echo "export SG_SCRIPT_PATH" >> $BASHRC
# 4. add completion:
	echo ". $BASHEXTS" >> $BASHRC
fi

echo "installation completed successfully"


# scriptsList="list in out edit setup"
#setComplete "sgcheck" "" "$scriptsList"
